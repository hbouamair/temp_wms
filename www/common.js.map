{"version":3,"sources":["./src/app/crud.service.ts","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js"],"names":[],"mappings":"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W,CAkNnB;AAlNmB;;;;;;;;;;;;;ACRxB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACtCrF;AAAA;AAAA;AAAA;AAAA;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,mEAAmE,qDAAoB;AACvF,kEAAkE,qDAAsB;AACxF;AACA;AACA,MAAM,6DAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AAA8D;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CrudService {\n  \n  private dbInstance: SQLiteObject;\n  readonly db_name: string = \"remotestack.db\";\n  readonly db_table: string = \"productsTable\";\n  readonly db_users: string = \"usTable\";\n  Products: Array <any> ;\n  Emplo : Array <any>;\n\n  constructor(\n    private platform: Platform,\n    private sqlite: SQLite    \n  ) { \n    this.databaseConn();\n  }\n\n    // Create SQLite database \n    databaseConn() {\n        this.platform.ready().then(() => {\n          this.sqlite.create({\n              name: this.db_name,\n              location: 'default'\n            }).then((sqLite: SQLiteObject) => {\n              this.dbInstance = sqLite;\n              sqLite.executeSql(`\n              CREATE TABLE IF NOT EXISTS ${this.db_table} (\n                product_id INTEGER PRIMARY KEY, \n                material varchar(255),\n                description varchar(255),\n                cagette varchar(255)\n\n              )`, [])\n              sqLite.executeSql(`\n              CREATE TABLE IF NOT EXISTS ${this.db_users} (\n                user_id INTEGER PRIMARY KEY, \n                nom varchar(255),\n                prenom varchar(255),\n                username varchar(255),\n                email varchar(255),\n                password varchar(255),\n                telephone INTEGER, \n                role INTEGER\n\n              )`, [])\n                .then((res) => {\n                   alert(JSON.stringify(res));\n                })\n                .catch((error) => alert(JSON.stringify(error)));\n            })\n            .catch((error) => alert(JSON.stringify(error)));\n        });   \n    }\n\n    // Crud\n    public addItem(n, e ,c) {\n      // validation\n      if (!n.length || !e.length  || !c.length ) { \n        alert('Provide both email & name');\n        return; \n      }\n      this.dbInstance.executeSql(`\n      INSERT INTO ${this.db_table} (material, description , cagette) VALUES ('${n}', '${e}' , '${c}')`, [])\n        .then(() => {\n          alert(\"Success\");\n          this.getAllProducts();\n        }, (e) => {\n          alert(JSON.stringify(e.err));\n        });\n    }\n\n    getAllProducts() {\n      return this.dbInstance.executeSql(`SELECT * FROM ${this.db_table}`, []).then((res) => {\n        this.Products = [];\n        if (res.rows.length > 0) {\n          for (var i = 0; i < res.rows.length; i++) {\n            this.Products.push(res.rows.item(i));\n          }\n          return this.Products;\n        }\n      },(e) => {\n        alert(JSON.stringify(e));\n      });\n    }\n\n    // Get user\n    getProduct(id): Promise<any> {\n      return this.dbInstance.executeSql(`SELECT * FROM ${this.db_table} WHERE product_id = ?`, [id])\n      .then((res) => { \n        return {\n          product_id: res.rows.item(0).product_id,\n          material: res.rows.item(0).material,  \n          description : res.rows.item(0).description,\n          cagette : res.rows.item(0).cagette,\n        }\n      });\n    }\n\n    // Update\n    updateProduct(id, material, description , cagette) {\n      let data = [material, description , cagette];\n      return this.dbInstance.executeSql(`UPDATE ${this.db_table} SET material = ?, description = ? , cagette = ? WHERE product_id = ${id}`, data)\n    }  \n\n    // Delete\n    deleteProduct(product) {\n      this.dbInstance.executeSql(`\n      DELETE FROM ${this.db_table} WHERE product_id = ${product}`, [])\n        .then(() => {\n          alert(\"User deleted!\");\n          this.getAllProducts();\n        })\n        .catch(e => {\n          alert(JSON.stringify(e))\n        });\n    }\n\n\n\n\n\n\n\n\n\n    public addUser(n, p ,u , e ,pa , te , r ) {\n      // validation\n     \n      this.dbInstance.executeSql(`\n      INSERT INTO ${this.db_users} (nom, prenom , username , email , password ,telephone , role ) VALUES ('${n}', '${p}' , '${u}' , '${e}' , '${pa}', '${te}' ,  '${r}')`, [])\n        .then(() => {\n          alert(\"Success\");\n          this.getAllEmp();\n        }, (e) => {\n          alert(JSON.stringify(e.err));\n        });\n    }\n\n    getAllEmp() {\n      return this.dbInstance.executeSql(`SELECT * FROM ${this.db_users}`, []).then((res) => {\n        this.Emplo = [];\n        if (res.rows.length > 0) {\n          for (var i = 0; i < res.rows.length; i++) {\n            this.Emplo.push(res.rows.item(i));\n          }\n          return this.Emplo;\n        }\n      },(e) => {\n        alert(JSON.stringify(e));\n      });\n    }\n\n    // Get user\n    getEmp(id): Promise<any> {\n      return this.dbInstance.executeSql(`SELECT * FROM ${this.db_users} WHERE user_id = ?`, [id])\n      .then((res) => { \n        return {\n          user_id: res.rows.item(0).user_id,\n          nom: res.rows.item(0).nom,  \n          prenom : res.rows.item(0).prenom,\n          username : res.rows.item(0).username,\n          email : res.rows.item(0).email,\n          password : res.rows.item(0).password,\n          telephone : res.rows.item(0).telephone,\n          role : res.rows.item(0).role,\n          \n\n        }\n      });\n    }\n\n    // Update\n    updateEmp(id, nom, prenom , username , email, password , tele , role) {\n      let data = [nom, prenom ,username, email, password, tele , role];\n      return this.dbInstance.executeSql(`UPDATE ${this.db_users} SET nom = ?, prenom= ? , username = ? , email =? , password =? , telephone =? ,role =? WHERE user_id = ${id}`, data)\n    }  \n\n    // Delete\n    deleteEmp(user) {\n      this.dbInstance.executeSql(`\n      DELETE FROM ${this.db_users} WHERE product_id = ${user}`, [])\n        .then(() => {\n          alert(\"User deleted!\");\n          this.getAllEmp();\n        })\n        .catch(e => {\n          alert(JSON.stringify(e))\n        });\n    }\n\n\n\n\n    checkLogin(username:string , password :string ) : Promise<any> {\n     return this.dbInstance.executeSql(`SELECT * FROM  ${this.db_users} WHERE  username = ? , password = ? `   , [username , password])\n      .then((res)=>{\n\n\n        if(res){\n          alert(\"login succesufully\")\n        }else{\n          alert(\"sorry username invalid\")\n        }\n      })\n      .catch(e=>{\n        alert(JSON.stringify(e))\n      });\n        \n\n\n      }\n    }\n\n\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-f49d994d.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n"],"sourceRoot":"webpack:///"}