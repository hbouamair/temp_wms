{"version":3,"file":"src_app_users_users_module_ts.js","mappings":"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","sources":["./src/app/database/dataservice.service.ts","./src/app/users/users-routing.module.ts","./src/app/users/users.module.ts","./src/app/users/users.page.ts","./src/app/users/users.page.html"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { SQLite, SQLiteObject } from \"@ionic-native/sqlite/ngx\";\nimport { CanLoad, Router } from '@angular/router';\nimport { SQLitePorter } from '@ionic-native/sqlite-porter/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Platform } from '@ionic/angular';\n\nexport interface User {\n  id: number;\n  name: string;\n  prenom: string;\n  username :string;\n  email: string;\n  password:string ;\n  tele:number ;\n  role :number ;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class DataserviceService {\n  private database: SQLiteObject;\n  private dbReady: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  users = new BehaviorSubject([]);\n  \n  \n\n  constructor(private plt: Platform, private sqlitePorter: SQLitePorter, private sqlite: SQLite, private http: HttpClient, private router : Router) {\n    this.plt.ready().then(() => {\n      this.sqlite.create({\n        name: 'wms.db',\n        location: 'default'\n      })\n      .then((db: SQLiteObject) => {\n          this.database = db;\n          this.seedDatabase();\n      });\n    });\n\n\n\n   }\n\n\n   seedDatabase() {\n    this.http.get('assets/wms.sql', { responseType: 'text'})\n    .subscribe(sql => {\n      this.sqlitePorter.importSqlToDb(this.database, sql)\n        .then(_ => {\n          this.getUsers();\n          this.dbReady.next(true);\n        })\n        .catch(e => console.error(e));\n    });\n  }\n\n\n\n\n  getDatabaseState() {\n    return this.dbReady.asObservable();\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.users.asObservable();\n  }\n  loadUsers() {\n    return this.database.executeSql('SELECT * FROM user', []).then(data => {\n      let users: User[] = [];\n\n      if (data.rows.length > 0) {\n        for (let i = 0; i < data.rows.length; i++) {\n          users.push({\n            id: data.rows.item(i).studId,\n            name: data.rows.item(i).name,\n            prenom: data.rows.item(i).prenom,\n            username: data.rows.item(i).username ,\n            email : data.rows.item(i).email ,\n            password : data.rows.item(i).password ,\n            tele : data.rows.item(i).tele ,\n            role : data.rows.item(i).role,\n           });\n        }\n      }\n      this.users.next(users);\n    });\n  }\n\n\n  addUserData(name, prenom , username , email , password ,tele , role ) {\n    let data = [name, prenom , username , email , password ,tele , role];\n    return this.database.executeSql('INSERT INTO user (name, prenom , username , email , password ,telephone , role) VALUES (?, ?, ? , ?,?,?)', data).then(data => {\n      this.loadUsers();\n    });\n  }\n  getUserById(id): Promise<User> {\n    return this.database.executeSql('SELECT * FROM user WHERE id = ?', [id]).then(data => {\n      return {\n        id: data.rows.item(0).studId,\n        name: data.rows.item(0).name,\n        prenom: data.rows.item(0).prenom,\n        username: data.rows.item(0).username ,\n        email : data.rows.item(0).email ,\n        password : data.rows.item(0).password ,\n        tele : data.rows.item(0).tele ,\n        role : data.rows.item(0).role,\n      };\n    });\n  }\n  updateUser(user: User) {\n    let data = [user.name, user.prenom,user.username ,user.email,user.password,user.tele,user.role];\n    return this.database.executeSql(`UPDATE user SET name = ?, prenom = ?, username = ? , email = ? ,  password = ? , tele = ?, role = ?  WHERE studId = ${user.id}`, data).then(data => {\n      this.loadUsers();\n    });\n  }\n  deleteUsers(id) {\n    console.log('Inside Deleting DB User Id '+ id);\n    return this.database.executeSql('DELETE FROM user WHERE id = ?', [id]).then(_ => {\n      this.loadUsers();\n    });\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UsersPage } from './users.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsersPageRoutingModule } from './users-routing.module';\n\nimport { UsersPage } from './users.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    UsersPageRoutingModule\n  ],\n  declarations: [UsersPage]\n})\nexport class UsersPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataserviceService, User } from \"../database/dataservice.service\";\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: ['./users.page.scss'],\n})\nexport class UsersPage implements OnInit {\n\n  hideMe :boolean = true ;\n  user: User = null;\n\n  constructor(private router: Router, private route: ActivatedRoute, private db:DataserviceService, private toast: ToastController ) {\n   \n    \n    \n\n   }\n   usersData = {};\n   users: User[] = [];\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      let id = params.get('id');\n\n      this.db.getUserById(id).then(data => {\n        this.user = data;\n      });\n    });\n\n    this.db.getDatabaseState().subscribe(rdy => {\n      if (rdy) {\n        this.db.getUsers().subscribe(users => {\n          this.users = users;\n          console.log(this.users);\n        });\n      }\n    });\n  }\n\n  updateUserData() {\n    this.db.updateUser(this.user).then(async (res) => {\n      let toast = await this.toast.create({\n        message: 'users Details Updated Successfully..',\n        duration: 3000\n      });\n      toast.present();\n    }).then(() => {this.router.navigateByUrl('users') , this.hideMe=true;}\n    \n    \n    );\n  }\n\n  delete() {\n    console.log('Deleting Student Id '+this.user.id);\n    this.db.deleteUsers(this.user.id).then(() => {\n      this.router.navigateByUrl('users');\n      this.hideMe=true;\n    });\n  }\n\n  addUsersDetails() {\n    this.db.addUserData(this.usersData['name'], this.usersData['prenom'], this.usersData['username'] ,this.usersData['email'] ,this.usersData['password'],this.usersData['tele'],this.usersData['role']).then(_ => {\n      this.usersData = {};\n    });\n  }\n\n\n hide(){\n  this.hideMe = false;\n }\n\n\n  \n  returnHome(){\n    this.router.navigate(['/home']);\n  }\n\n  back(){\n    this.router.navigate(['/users']);\n    this.hideMe=true;\n\n\n    \n  }\n\n\n\n\n\n  \n\n}","export default \"<ion-app>\\n  <ion-content class=\\\"page\\\">\\n    <ion-toolbar class=\\\"tool\\\">\\n      <ion-grid>\\n        <ion-row class=\\\"ion-align-items-center\\\">\\n          <ion-col size=\\\"2\\\">\\n            <ion-icon\\n              (click)=\\\"returnHome()\\\"\\n              src=\\\"../../assets/mdicons/md-home.svg\\\"\\n            ></ion-icon>\\n          </ion-col>\\n          <ion-col size=\\\"6\\\">\\n            <ion-icon class=\\\"pers\\\" name=\\\"person\\\"> </ion-icon\\n            ><ion-label> Tabari Arrafat</ion-label>\\n          </ion-col>\\n          <ion-col>\\n            <ion-icon\\n              src=\\\"../../assets/mdicons/Settings.svg\\\"\\n              auto-hide=\\\"false\\\"\\n            ></ion-icon>\\n          </ion-col>\\n          <ion-col>\\n            <ion-icon\\n              src=\\\"../../assets/mdicons/Logout.svg\\\"\\n              auto-hide=\\\"false\\\"\\n            ></ion-icon>\\n          </ion-col>\\n          <ion-col> </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-toolbar>\\n\\n    <div class=\\\"tab\\\">\\n      <ion-content class=\\\"item ion-padding\\\">\\n        <ion-segment\\n          [(ngModel)]=\\\"selectedSegement\\\"\\n          (ionChange)=\\\"segmentChanged($event)\\\"\\n          value=\\\"users\\\" >\\n          <ion-segment-button>\\n            <ion-fab-button>\\n              <ion-icon src=\\\"../../assets/mdicons/md-prod.svg \\\"></ion-icon>\\n            </ion-fab-button>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"prod\\\" class=\\\"segment-value\\\">\\n            <ion-fab-button>\\n              <ion-icon src=\\\"../../assets/mdicons/md-emp.svg\\\"></ion-icon>\\n            </ion-fab-button>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"users\\\">\\n            <ion-fab-button>\\n              <ion-icon src=\\\"../../assets/mdicons/md-us.svg\\\"></ion-icon>\\n            </ion-fab-button>\\n          </ion-segment-button>\\n          <ion-segment-button>\\n            <ion-fab-button>\\n              <ion-icon\\n                class=\\\"menu-icon\\\"\\n                src=\\\"../../assets/mdicons/md-inv.svg\\\"\\n              ></ion-icon>\\n            </ion-fab-button>\\n          </ion-segment-button>\\n          <ion-segment-button>\\n            <ion-fab-button>\\n              <ion-icon\\n                class=\\\"menu-icon\\\"\\n                src=\\\"../../assets/mdicons/md-stock.svg\\\"\\n              ></ion-icon>\\n            </ion-fab-button>\\n          </ion-segment-button>\\n        </ion-segment>\\n      </ion-content>\\n      <ion-content class=\\\"table users\\\" *ngIf=\\\"selectedSegement == 'users'\\\">\\n        <ion-row *ngIf=\\\"hideMe\\\" class=\\\"top\\\">\\n          <ion-col *ngIf=\\\"hideMe\\\" size=\\\"3\\\"> Nom </ion-col>\\n          <ion-col *ngIf=\\\"hideMe\\\" size=\\\"3\\\"> Login </ion-col>\\n          <ion-col *ngIf=\\\"hideMe\\\" size=\\\"4\\\"> Téléphone </ion-col>\\n          <ion-col *ngIf=\\\"hideMe\\\" size=\\\"2\\\"> éditer </ion-col>\\n        </ion-row>\\n        <ion-row *ngIf=\\\"!hideMe\\\" class=\\\"top\\\">\\n          <ion-col class=\\\"show\\\" size=\\\"6\\\"> Formulaire </ion-col>\\n        </ion-row>\\n        <ion-content class=\\\"scrol\\\">\\n          <ion-scroll *ngIf=\\\"hideMe\\\" scrollY=\\\"true\\\" direction=\\\"xy\\\">\\n\\n        \\n            <ion-row  *ngFor=\\\"let user of users\\\"  [routerLink]=\\\"['/', 'users', user.id]\\\" class=\\\"data-row\\\">\\n              <ion-col size=\\\"3\\\"> {{user.name}}</ion-col>\\n              <ion-col size=\\\"3\\\"> {{user.username}} </ion-col>\\n              <ion-col size=\\\"4\\\"> {{user.tele}} </ion-col>\\n              <ion-col class=\\\"edit\\\" size=\\\"2\\\">\\n                <ion-icon src=\\\"../../assets/mdicons/edit.svg\\\"></ion-icon>\\n              </ion-col>\\n            </ion-row>\\n          </ion-scroll>\\n          <ion-scroll  *ngIf=\\\"!hideMe\\\" scrollY=\\\"true\\\" direction=\\\"xy\\\">\\n            <ion-content>\\n             \\n            <ion-list class=\\\"form ion-padding\\\">\\n              \\n              <ion-item class=\\\"select\\\">\\n                <ion-label>Role\\n                <ion-input [(ngModel)]=\\\"usersData.role\\\"  type=\\\"text\\\"> </ion-input ></ion-label> \\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\"\\n                  >Nom<ion-input [(ngModel)]=\\\"usersData.name\\\"  type=\\\"text\\\"></ion-input\\n                ></ion-label>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Prénom</ion-label>\\n                <ion-input [(ngModel)]=\\\"usersData.prenom\\\"  type=\\\"text\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Username</ion-label>\\n                <ion-input [(ngModel)]=\\\"usersData.username\\\"  type=\\\"email\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Email</ion-label>\\n                <ion-input [(ngModel)]=\\\"usersData.email\\\"  type=\\\"email\\\"></ion-input>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Password</ion-label>\\n                <ion-input [(ngModel)]=\\\"usersData.password\\\"  type=\\\"password\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label position=\\\"floating\\\">Télephone</ion-label>\\n                <ion-input [(ngModel)]=\\\"usersData.tele\\\"  type=\\\"number\\\"></ion-input>\\n              </ion-item>\\n\\n              \\n            </ion-list>\\n             \\n          </ion-content>\\n          </ion-scroll>\\n          <ion-toolbar class=\\\"add\\\">\\n            <div *ngIf=\\\"hideMe\\\" class=\\\"butt\\\">\\n              <ion-fab-button (click)=\\\"hide()\\\"\\n                ><ion-icon name=\\\"add\\\"></ion-icon>\\n              </ion-fab-button>\\n              <ion-label> Ajouter Utilisateur </ion-label>\\n            </div>\\n            <div *ngIf=\\\"!hideMe\\\" class=\\\"butt1\\\">\\n              <ion-fab-button (click)=\\\"addUsersDetails()\\\"\\n                ><ion-icon src=\\\"../../assets/mdicons/save.svg\\\"></ion-icon>\\n              </ion-fab-button   >\\n              <ion-label> Enregistrer</ion-label>\\n\\n              <ion-fab-button (click)=\\\"back()\\\"\\n                ><ion-icon src=\\\"../../assets/mdicons/retour.svg\\\"></ion-icon>\\n              </ion-fab-button>\\n              <ion-label>Retour </ion-label>\\n            </div>\\n          </ion-toolbar>\\n        </ion-content>\\n      </ion-content>\\n      <div class=\\\"prod\\\" *ngIf=\\\"selectedSegement == 'prod'\\\">\\n        <h1>teext</h1>\\n      </div>\\n    </div>\\n  </ion-content>\\n  <ion-footer>\\n    <ion-toolbar class=\\\"qr-scan\\\">\\n      <ion-fab-button> <ion-icon name=\\\"scan\\\"></ion-icon></ion-fab-button>\\n      <span class=\\\"qr\\\">Scanner Qr Code</span>\\n    </ion-toolbar>\\n  </ion-footer>\\n</ion-app>\\n\";"],"names":[],"sourceRoot":"webpack:///"}